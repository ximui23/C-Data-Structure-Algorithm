#include <queue>
using namespace std;
#include <iostream>

#define CAPACITY 5

int queue1[CAPACITY];  //use queue1 because queue is reserved for key word

int front = 0;
int rear = 0;


void insert()
{
	//Check if queue1 is full
	if (CAPACITY == rear)   //This means rear is pointing to the last position in queue1 -> queue1 is full
	{
		cout << "Queue is full" << endl;
	}
	else
	{
		int element;
		cout << "Please enter the value: " << endl;
		cin >> element;

		queue1[element] = element; //insert element into the queue. 
									// '=' assign from right to left, queue1[element]=element; means 
									//we assign element into queue1[element] 
		rear++; //increment of rear

	}

}

void remove()
{
	//check if the queue is empty
	if (front == rear)   //front is always = 0, so if front == rear -> queue is empyt
	{
		cout << "The queue is empty " << endl;
	}
	else
	{
		cout << "The deleted items are: " << endl;
		cout << queue1[front] << endl;

		for (int i = 0; i < CAPACITY; i++)  //can be either i < CAPACITY or i < rear
		{
			queue1[i] = queue1[i + 1]; //assign the i+1 position to i's position
			
		}
		rear--; //decrement of rear
	}
}

void display()
{
	if (front == rear)
	{
		cout << "Queue is empty" << endl;
	}
	else
	{
		cout << "The queue element are : " << endl;
		for (int i = 0; i < rear; i++)
		{
			cout << queue1[i] << endl;
		}
	}
}

int main()
{
	insert(); 
	remove();
	display();

    return 0;
}

